import { useUser } from "@clerk/nextjs";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import Head from "next/head";
import { useRouter } from "next/router";
import React from "react";
import { useTranslation } from "next-i18next";
import AppLayout from "~/components/layout";
import RecipeList from "~/components/recipelist";
import { api } from "~/utils/api";

const MyRecipes = () => {
  const {t} = useTranslation()
  const {user} = useUser()
  const router = useRouter()
  const { data, isLoading, error } = api.recipe.getAllByUser.useQuery({
    authorId: user?.id,
    orderBy: (router.query.orderBy as string) ?? "createdAt",
    filterByTags: (router.query.tags as string) ?? "",
    filterByName: (router.query.name as string) ?? "",
  });
  return  <>
  <Head>
    <title>Cooking Recipe</title>
    <meta name="description" content="Generated by create-t3-app" />
    <link rel="icon" href="/favicon.ico" />
  </Head>
  <AppLayout>
    <RecipeList
      data={data}
      isLoading={isLoading}
      listTitle={t("myRecipe")}
    />
  </AppLayout>
</>;
};

export async function getStaticProps({ locale }: { locale: string }) {

  return {
    props: {
      ...(await serverSideTranslations(locale, ["common"])),
    },
  };
}

export default MyRecipes;
